// Generated by Haxe 4.1.4
(function ($hx_exports, $global) { "use strict";
$hx_exports["pancake"] = $hx_exports["pancake"] || {};
$hx_exports["pancake"]["graphics"] = $hx_exports["pancake"]["graphics"] || {};
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	pancake_Pancake.graphics.loadImage("pancake.png",0);
	pancake_Pancake.graphics.loadImage("haxe.png",1);
	pancake_Pancake.canvas.create(800,600,0);
	pancake_Pancake.context.create(0,0);
	pancake_Pancake.graphics.useContext(0);
	pancake_Pancake.canvases[0].style.border = "1px black solid";
	var logo_x = 280;
	var logo_y = 150;
	var timer = 0;
	var game = function() {
		pancake_Pancake.graphics.clear();
		pancake_Pancake.graphics.imageFromIndex(0,logo_x,logo_y,256,256);
		pancake_Pancake.graphics.imageFromIndex(1,logo_x + 63,logo_y + 80,128,128);
		timer += 1;
		if(timer - 1 == 20) {
			pancake_Pancake.graphics.setBackgroundColor(pancake_Pancake.graphics.random.RGBA());
			timer = 0;
		}
	};
	var gameloop = pancake_Pancake.timers.timer(game,60);
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
haxe_Exception.__name__ = true;
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	get_native: function() {
		return this.__nativeException;
	}
	,__class__: haxe_Exception
});
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
haxe_ValueException.__name__ = true;
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	__class__: haxe_ValueException
});
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
Math.__name__ = true;
var pancake_Canvas = function() {
};
pancake_Canvas.__name__ = true;
pancake_Canvas.prototype = {
	create: function(width,height,canvas_index) {
		pancake_Pancake.canvases[canvas_index] = window.document.createElement("canvas");
		pancake_Pancake.canvases[canvas_index].width = width;
		pancake_Pancake.canvases[canvas_index].height = height;
		window.document.body.appendChild(pancake_Pancake.canvases[canvas_index]);
	}
	,__class__: pancake_Canvas
};
var pancake_Context = function() {
};
pancake_Context.__name__ = true;
pancake_Context.prototype = {
	create: function(canvas_index,context_index) {
		pancake_Pancake.contexts[context_index] = pancake_Pancake.canvases[canvas_index].getContext("2d",null);
	}
	,__class__: pancake_Context
};
var pancake_Random = $hx_exports["pancake"]["graphics"]["random"] = function() {
};
pancake_Random.__name__ = true;
pancake_Random.prototype = {
	alpha: function() {
		return Math.random();
	}
	,RGB: function() {
		return "rgb(" + Std.random(255) + "," + Std.random(255) + "," + Std.random(255) + ")";
	}
	,RGBA: function() {
		return "rgba(" + Std.random(255) + "," + Std.random(255) + "," + Std.random(255) + "," + Std.random(255) + ")";
	}
	,HSL: function() {
		return "hsl(" + Std.random(361) + "," + Std.random(100) + "%," + Std.random(100) + "%)";
	}
	,HSLA: function() {
		return "hsl(" + Std.random(361) + "," + Std.random(100) + "%," + Std.random(100) + "%," + Math.random() + ")";
	}
	,__class__: pancake_Random
};
var pancake_Graphics = function() {
	this.random = new pancake_Random();
	this.fits = false;
	var _gthis = this;
	pancake_Graphics.backend = "CanvasRenderingContext2D";
	pancake_Graphics.tint = null;
	window.console.log("Made with Pancake " + pancake_Pancake.version + "\nhttps://github.com/Rabios/Pancake\nRenderer: " + pancake_Graphics.backend);
	window.document.onfullscreenchange = document.onmozfullscreenchange = document.onmsfullscreenchange = document.onwebkitfullscreenchange = function() {
		if(_gthis.fullscreen() && pancake_Graphics.canvas != null) {
			pancake_Graphics.canvas.width = window.innerWidth;
			pancake_Graphics.canvas.height = window.innerHeight;
		}
		if(!_gthis.fullscreen() && pancake_Graphics.canvas != null) {
			if(_gthis.fits) {
				pancake_Graphics.canvas.width = window.innerWidth;
				pancake_Graphics.canvas.height = window.innerHeight;
			} else {
				pancake_Graphics.canvas.width = pancake_Canvas.compatible_width;
				pancake_Graphics.canvas.height = pancake_Canvas.compatible_height;
			}
		}
	};
};
pancake_Graphics.__name__ = true;
pancake_Graphics.renderImage = function(image,sx,sy,sw,sh,dx,dy,dw,dh) {
	var ctx = js_Boot.__cast(pancake_Graphics.context , CanvasRenderingContext2D);
	ctx.imageSmoothingEnabled = false;
	var img = window.document.createElement("canvas").getContext("2d");
	img.canvas.width = image.width;
	img.canvas.height = image.height;
	img.save();
	if(pancake_Graphics.tint != null) {
		img.fillStyle = js_Boot.__cast(pancake_Graphics.tint , String);
		img.globalAlpha = 0.7;
		img.fillRect(0,0,img.canvas.width,img.canvas.height);
		img.globalCompositeOperation = "destination-atop";
		img.globalAlpha = 1;
	}
	img.drawImage(image,0,0,image.width,image.height);
	img.restore();
	ctx.drawImage(img.canvas,sx,sy,sw,sh,dx,dy,dw,dh);
};
pancake_Graphics.prototype = {
	fullscreen: function() {
		if(!(document.fullscreen || document.webkitIsFullScreen)) {
			return document.mozFullScreen;
		} else {
			return true;
		}
	}
	,useContext: function(context_index) {
		pancake_Graphics.context = js_Boot.__cast(pancake_Pancake.contexts[context_index] , CanvasRenderingContext2D);
		pancake_Graphics.canvas = pancake_Pancake.contexts[context_index].canvas;
	}
	,setBackgroundColor: function(color) {
		pancake_Graphics.canvas.style.backgroundColor = color;
		pancake_Graphics.canvas.style.backgroundSize = pancake_Graphics.canvas.width + "px " + pancake_Graphics.canvas.height + "px";
	}
	,clearRect: function(x,y,w,h) {
		var ctx = js_Boot.__cast(pancake_Graphics.context , CanvasRenderingContext2D);
		ctx.clearRect(x,y,w,h);
	}
	,clear: function() {
		this.clearRect(0,0,pancake_Graphics.canvas.width,pancake_Graphics.canvas.height);
	}
	,loadImage: function(src,image_index) {
		pancake_Pancake.images[image_index] = new Image();
		pancake_Pancake.images[image_index].src = src;
	}
	,imageFromIndex: function(image_index,x,y,w,h) {
		pancake_Graphics.renderImage(pancake_Pancake.images[image_index],0,0,pancake_Pancake.images[image_index].width,pancake_Pancake.images[image_index].height,x,y,w,h);
	}
	,__class__: pancake_Graphics
};
var pancake_Timers = function() {
};
pancake_Timers.__name__ = true;
pancake_Timers.prototype = {
	timer: function(f,fps) {
		return window.setInterval(f,1000 / fps);
	}
	,__class__: pancake_Timers
};
var pancake_Pancake = $hx_exports["pancake"] = function() { };
pancake_Pancake.__name__ = true;
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
js_Boot.__toStr = ({ }).toString;
pancake_Canvas.compatible_width = js_Boot.__cast(window.innerWidth - 20 , Int);
pancake_Canvas.compatible_height = js_Boot.__cast(window.innerHeight - 20 , Int);
pancake_Pancake.version = "v0.0.13";
pancake_Pancake.canvases = [];
pancake_Pancake.contexts = [];
pancake_Pancake.images = [];
pancake_Pancake.canvas = new pancake_Canvas();
pancake_Pancake.context = new pancake_Context();
pancake_Pancake.graphics = new pancake_Graphics();
pancake_Pancake.timers = new pancake_Timers();
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
